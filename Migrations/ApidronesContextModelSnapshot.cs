// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apidrones.Data;
using apidrones.Model;

namespace apidrones.Migrations
{
    [DbContext(typeof(ApidronesContext))]
    partial class ApidronesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("apidrones.Model.DroneClass", b =>
                {
                    b.Property<string>("Serial_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Battery_capacity")
                        .HasColumnType("int");

                    b.Property<int>("Weight_limit")
                        .HasColumnType("int")
                        .HasMaxLength(500);

                    b.Property<int>("droneModelId");

                    b.Property<int>("droneStateId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("Serial_number");

                    b.HasIndex("droneModelId");

                    b.HasIndex("droneStateId");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("apidrones.Model.DroneModel", b =>
                {
                    b.Property<int>("DroneModelId");

                    b.Property<string>("ModelName");

                    b.HasKey("DroneModelId");

                    b.ToTable("DroneModel");

                    b.HasData(
                        new { DroneModelId = 1, ModelName = "Lightweight" },
                        new { DroneModelId = 2, ModelName = "Middleweight" },
                        new { DroneModelId = 3, ModelName = "Cruiserweight" },
                        new { DroneModelId = 4, ModelName = "Heavyweight" }
                    );
                });

            modelBuilder.Entity("apidrones.Model.DroneState", b =>
                {
                    b.Property<int>("DroneStateId");

                    b.Property<string>("StateName");

                    b.HasKey("DroneStateId");

                    b.ToTable("DroneState");

                    b.HasData(
                        new { DroneStateId = 1, StateName = "IDLE" },
                        new { DroneStateId = 2, StateName = "LOADING" },
                        new { DroneStateId = 3, StateName = "LOADED" },
                        new { DroneStateId = 4, StateName = "DELIVERING" },
                        new { DroneStateId = 5, StateName = "DELIVERED" },
                        new { DroneStateId = 6, StateName = "RETURNING" }
                    );
                });

            modelBuilder.Entity("apidrones.Model.MedicationClass", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(60)")
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .IsUnicode(false);

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("apidrones.Model.ShipmentClass", b =>
                {
                    b.Property<int>("IdShipment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DroneId");

                    b.HasKey("IdShipment");

                    b.HasIndex("DroneId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("apidrones.Model.ShipmentDetails", b =>
                {
                    b.Property<int>("IdShipment");

                    b.Property<string>("MedicationId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdShipment", "MedicationId");

                    b.HasIndex("MedicationId");

                    b.ToTable("ShipmentsDetails");
                });

            modelBuilder.Entity("apidrones.Model.DroneClass", b =>
                {
                    b.HasOne("apidrones.Model.DroneModel", "droneModel")
                        .WithMany("Drones")
                        .HasForeignKey("droneModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("apidrones.Model.DroneState", "droneState")
                        .WithMany("Drones")
                        .HasForeignKey("droneStateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("apidrones.Model.ShipmentClass", b =>
                {
                    b.HasOne("apidrones.Model.DroneClass", "Drone")
                        .WithMany("Shipments")
                        .HasForeignKey("DroneId")
                        .HasConstraintName("FK_Drones_Shipments");
                });

            modelBuilder.Entity("apidrones.Model.ShipmentDetails", b =>
                {
                    b.HasOne("apidrones.Model.ShipmentClass", "Shipment")
                        .WithMany("Details")
                        .HasForeignKey("IdShipment")
                        .HasConstraintName("FK_Shipment_ShipmentDetails")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("apidrones.Model.MedicationClass", "Medication")
                        .WithMany("Shipments")
                        .HasForeignKey("MedicationId")
                        .HasConstraintName("FK_Medication_ShipmentDetails")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
